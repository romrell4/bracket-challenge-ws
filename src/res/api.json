{
	"swagger": "2.0",
	"info": {
		"title": "Bracket Challenge API",
		"version": "v1"
	},
	"paths": {
		"/users": {
			"get": {
				"summary": "Get all users.",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Users",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/user"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"post": {
				"summary": "Create a new user.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "user",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/user"
						}
					}
				],
				"responses": {
					"201": {
						"description": "User",
						"schema": {
							"$ref": "#/definitions/user"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		},
		"/users/{userId}": {
			"get": {
				"summary": "Get the information about a user.",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "User",
						"schema": {
							"$ref": "#/definitions/user"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"put": {
				"summary": "Update the information about a user.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "user",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/user"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User",
						"schema": {
							"$ref": "#/definitions/user"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"delete": {
				"summary": "Delete a user.",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Empty"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		},
		"/players": {
			"get": {
				"summary": "Get all players.",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Players",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/player"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"post": {
				"summary": "Create a new player.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "player",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/player"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Player",
						"schema": {
							"$ref": "#/definitions/player"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		},
		"/players/{playerId}": {
			"get": {
				"summary": "Get the information for a player.",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "playerId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Player",
						"schema": {
							"$ref": "#/definitions/player"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"put": {
				"summary": "Update the information about a player.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "playerId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "player",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/player"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Player",
						"schema": {
							"$ref": "#/definitions/player"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"delete": {
				"summary": "Delete a player.",
				"parameters": [
					{
						"name": "playerId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Empty"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		},
		"/tournaments": {
			"get": {
				"summary": "Get all tournaments.",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Tournaments",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/tournament"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"post": {
				"summary": "Create a tournament.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournament",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/tournament"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Tournament",
						"schema": {
							"$ref": "#/definitions/tournament"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		},
		"/tournaments/{tournamentId}": {
			"get": {
				"summary": "Get the information for a tournament.",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Tournament",
						"schema": {
							"$ref": "#/definitions/tournament"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"put": {
				"summary": "Update the information for a tournament. This function can be called to create the master bracket as well.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "player",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/player"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Tournament",
						"schema": {
							"$ref": "#/definitions/tournament"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"delete": {
				"summary": "Delete a tournament.",
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Empty"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		},
		"/tournaments/{tournamentId}/brackets": {
			"get": {
				"summary": "Get all brackets for a given tournament.",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Brackets",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/bracket"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"post": {
				"summary": "Create a bracket in a given tournament. This will also create all the matches and copy the starting values from the master bracket.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "bracket",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/bracket"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Bracket",
						"schema": {
							"$ref": "#/definitions/bracket"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		},
		"/tournaments/{tournamentId}/brackets/{bracketId}": {
			"get": {
				"summary": "Get the information for a bracket in a given tournament.",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "bracketId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Bracket",
						"schema": {
							"$ref": "#/definitions/bracket"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"put": {
				"summary": "Update the information for a bracket in a given tournament.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "bracketId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "bracket",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/bracket"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Bracket",
						"schema": {
							"$ref": "#/definitions/bracket"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"delete": {
				"summary": "Delete a bracket in a given tournament.",
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "bracketId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Empty"
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		},
		"/tournaments/{tournamentId}/brackets/{bracketId}/matches": {
			"get": {
				"summary": "Get all matches for the given bracket in the given tournament. This function will be used to generate the UI for the mobile app's bracket.",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "bracketId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Matches",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/match"
							}
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		},
		"/tournaments/{tournamentId}/brackets/{bracketId}/matches/{matchId}": {
			"get": {
				"summary": "Get the information for a match in a given bracket for a given tournament.",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "bracketId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "matchId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Match",
						"schema": {
							"$ref": "#/definitions/match"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			},
			"put": {
				"summary": "Update the information for a match in a given bracket for a given tournament.",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"name": "tournamentId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "bracketId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "matchId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "match",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/match"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Match",
						"schema": {
							"$ref": "#/definitions/match"
						}
					}
				},
				"x-amazon-apigateway-integration": {
					"responses": {
						"default": {
							"statusCode": "200"
						}
					},
					"uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:593996188786:function:BracketChallenge/invocations",
					"passthroughBehavior": "when_no_match",
					"httpMethod": "POST",
					"contentHandling": "CONVERT_TO_TEXT",
					"type": "aws_proxy"
				}
			}
		}
	},
	"definitions": {
		"user": {
			"properties": {
				"user_id": {
					"type": "integer"
				},
				"username": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"player": {
			"properties": {
				"player_id": {
					"type": "integer"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"tournament": {
			"properties": {
				"tournament_id": {
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"master_bracket_id": {
					"type": "integer"
				}
			}
		},
		"bracket": {
			"properties": {
				"bracket_id": {
					"type": "integer"
				},
				"user_id": {
					"type": "integer"
				},
				"tournament_id": {
					"type": "integer"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"match": {
			"properties": {
				"match_id": {
					"type": "integer"
				},
				"bracket_id": {
					"type": "integer"
				},
				"round": {
					"type": "integer"
				},
				"position": {
					"type": "integer"
				},
				"player1_id": {
					"type": "integer"
				},
				"player2_id": {
					"type": "integer"
				},
				"seed1": {
					"type": "integer"
				},
				"seed2": {
					"type": "integer"
				},
				"winner_id": {
					"type": "integer"
				}
			}
		}
	}
}